{"version":3,"sources":["HomePage.js","Person.js","api/getDataFromUrl.js","PeopleTable.js","api/peopleUrl.js","App.js","index.js"],"names":["HomePage","react_default","a","createElement","react_router_dom","className","to","classNames","require","Person","_ref","person","selectedPerson","setSelectedPerson","history","useHistory","location","useLocation","Person--male","sex","Person--female","concat","century","Person--selected","name","toLowerCase","onClick","push","pathname","split","join","search","id","born-before-1650","born","died","mother","father","lived-for-65-and-more","age","getDataFromUrl","url","responsePromise","data","regenerator_default","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","withRouter","match","useRouteMatch","params","URLSearchParams","_useState","useState","undefined","_useState2","Object","slicedToArray","_useState3","get","_useState4","filterBy","setFilterBy","_useState5","_useState6","people","setPeople","_useState7","_useState8","activeSortMethod","setActiveSortMethod","useEffect","then","peopleFromServer","map","index","objectSpread2","Math","ceil","toString","sortBy","visiblePeople","toConsumableArray","filter","includes","length","sort","b","localeCompare","Fragment","placeholder","type","onChange","event","set","target","value","trim","delete","tableHeading","key","append","src_Person","App","react_router","exact","path","component","PeopleTable","ReactDOM","render","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7647d581.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\n\nconst HomePage = () => (\n  <Link className=\"button\" to=\"/people/\">Download People table</Link>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { useHistory,\n  useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst Person = ({ person, selectedPerson, setSelectedPerson }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <tr\n      className={\n        classNames(\n          [{ 'Person--male': person.sex === 'm' },\n            { 'Person--female': person.sex === 'f' },\n            `Person--lived-in-${person.century}`,\n            'Person',\n            { 'Person--selected': (\n              selectedPerson === person.name.toLowerCase()\n            ) },\n          ]\n        )\n      }\n      onClick={() => {\n        history.push({\n          pathname: `${person.name.split(' ').join('-').toLowerCase()}`,\n          search: location.search,\n        });\n        setSelectedPerson(person.name.toLowerCase());\n      }}\n    >\n\n      <td className=\"PeopleTable__description\">{person.id}</td>\n      <td className={classNames([{ 'born-before-1650': person.born < 1650 }])}>\n        {person.name}\n      </td>\n      <td className=\"PeopleTable__description\">{person.sex}</td>\n      <td className=\"PeopleTable__description\">{person.born}</td>\n      <td className=\"PeopleTable__description\">{person.died}</td>\n      <td className=\"PeopleTable__description\">{person.mother}</td>\n      <td className=\"PeopleTable__description\">{person.father}</td>\n      <td className={classNames(\n        [{ 'lived-for-65-and-more': person.age >= 65 },\n          'PeopleTable__description']\n      )}\n      >\n        {person.age}\n      </td>\n      <td className={classNames(['PeopleTable__description'])}>\n        {person.century}\n      </td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    century: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n  }).isRequired,\n  selectedPerson: PropTypes.string.isRequired,\n  setSelectedPerson: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","const getDataFromUrl = async(url) => {\n  const responsePromise = await fetch(url);\n  const data = await responsePromise.json();\n\n  return data;\n};\n\nexport default getDataFromUrl;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory,\n  useLocation, useRouteMatch } from 'react-router-dom';\nimport Person from './Person';\nimport getDataFromUrl from './api/getDataFromUrl';\nimport peopleUrl from './api/peopleUrl';\n\nconst PeopleTable = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const params = new URLSearchParams(location.search);\n  const [selectedPerson, setSelectedPerson] = useState(\n    match.params.person !== undefined\n      ? match.params.person.split('-').join(' ') : ''\n  );\n  const [filterBy, setFilterBy] = useState(\n    params.get('query') !== null ? params.get('query') : ''\n  );\n  const [people, setPeople] = useState([]);\n  const [activeSortMethod, setActiveSortMethod] = useState(\n    params.get('sortBy') !== null ? params.get('sortBy') : ''\n  );\n\n  useEffect(\n    () => {\n      getDataFromUrl(peopleUrl)\n        .then((peopleFromServer) => {\n          setPeople(\n            peopleFromServer\n              .map(\n                (person, index) => ({\n                  ...person,\n                  id: index + 1,\n                  age: person.died - person.born,\n                  century: Math.ceil(person.died / 100),\n                })\n              )\n          );\n        });\n    }\n    , []\n  );\n\n  useEffect(() => {\n    setActiveSortMethod(params.get('sortBy'));\n  }, [params.toString()]);\n  useEffect(() => {\n    setSelectedPerson(match.params.person.split('-').join(' '));\n  }, [match.params.person]);\n\n  const getSortMethod = (sortBy) => {\n    if (sortBy === '') {\n      return () => 1;\n    }\n\n    if (typeof people[0][sortBy] === 'string') {\n      return (a, b) => a[sortBy].localeCompare(b[sortBy]);\n    }\n\n    return (a, b) => a[sortBy] - b[sortBy];\n  };\n\n  const visiblePeople = [...people]\n    .filter(\n      person => (person.name + person.mother + person.father)\n        .toLowerCase().includes(filterBy)\n    );\n\n  if (visiblePeople.length > 0) {\n    visiblePeople.sort(getSortMethod(activeSortMethod));\n  }\n\n  return (\n    <>\n\n      <h1>People table</h1>\n      <p>\n          number of currently visible people\n        {' '}\n        {visiblePeople.length}\n      </p>\n      <input\n        placeholder=\"type for filtering\"\n        type=\"text\"\n        className=\"input input_search-in-table\"\n        onClick={() => {\n          setFilterBy('');\n        }}\n        onChange={(event) => {\n          params.set('query', event.target.value.trim().toLowerCase());\n          if (event.target.value.trim().toLowerCase().length === 0) {\n            params.delete('query');\n          }\n\n          history.push({\n            search: `?${params.toString()}`,\n          });\n          setFilterBy(event.target.value.trim().toLowerCase());\n        }}\n      />\n      <table className=\"PeopleTable\">\n        <thead className=\"PeopleTable__head\">\n          <tr className=\"PeopleTable__row\">\n            {['id',\n              'name',\n              'sex',\n              'born',\n              'died',\n              'mother',\n              'father',\n              'age',\n              'century',\n            ].map(\n              tableHeading => (\n                <th\n                  key={tableHeading}\n                  className=\"PeopleTable__heading\"\n                  onClick={() => {\n                    if (tableHeading !== 'mother'\n                      && tableHeading !== 'father') {\n                      params.delete('sortBy');\n                      params.append('sortBy', tableHeading);\n                      history.push({\n                        search: `?${params.toString()}`,\n                      });\n                      setActiveSortMethod(tableHeading);\n                    }\n                  }}\n\n                >\n                  {tableHeading}\n                </th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className=\"PeopleTable__body\">\n          {visiblePeople\n            .map(\n              person => (\n                <Person\n                  person={person}\n                  key={person.id}\n                  selectedPerson={selectedPerson}\n                  setSelectedPerson={setSelectedPerson}\n                />\n              )\n            )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default withRouter(PeopleTable);\n","// eslint-disable-next-line max-len\nconst peopleUrl = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport default peopleUrl;\n","import React from 'react';\nimport './App.scss';\nimport {\n  Route,\n} from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport PeopleTable from './PeopleTable';\n\nconst App = () => (\n  <div className=\"App\">\n    <Route exact path=\"/\" component={HomePage} />\n    <Route path=\"/people/:person?\" component={PeopleTable} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter basename=\"/react_people-table\">\n    <App />\n  </HashRouter>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}